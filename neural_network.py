# -*- coding: utf-8 -*-
"""Neural Network.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fJdGxaYI-hiY0Qi-SusBmc_jEJrvULH7
"""

import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
from math import floor, ceil
from pylab import rcParams
from keras.models import Sequential
from keras.layers import Dense
import numpy
# Setup:
ScaleFactor = 1
TransFactor = 0
sess = tf.InteractiveSession()

# %matplotlib inline

sns.set(style='ticks', palette='Spectral', font_scale=1.5)

material_palette = ["#4CAF50", "#2196F3", "#9E9E9E", "#FF9800", "#607D8B", "#9C27B0"]
sns.set_palette(material_palette)
rcParams['figure.figsize'] = 16, 8

plt.xkcd();
random_state = 42
np.random.seed(random_state)
tf.set_random_seed(random_state)

print("done")

"""Input the dataset that you want to test"""

#GROUP1
#Importing csv from github
DataUrl = "https://github.com/epicrunze/ScienceFair/raw/master/Revised_Group_1_Data.csv"
print("done")



#Defining number of features + 1 for test case
nF = 27

dataset = np.loadtxt(DataUrl, delimiter = ',', encoding = 'utf-8-sig')
X = dataset[:,0:nF]
Y = dataset[:,0]
print(X.shape, Y.shape)
print("done")

#Creating NN
model = Sequential()
model.add(Dense(27, input_dim=nF))
model.add(Dense(128, activation='relu'))
model.add(Dense(2048, activation='relu'))
model.add(Dense(1))
model.compile(loss='mean_squared_error', optimizer='adam', metrics=['mse'])
model.fit(X, Y, epochs=100)
print("done")

#Testing Model
results = model.predict(X)*ScaleFactor + TransFactor
results = tf.cast(results, tf.float32)
print(results.eval())
print(results)
print("done")